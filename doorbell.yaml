blueprint:
  name: Doorbell Automation
  description: >
    # ðŸ”” Doorbell Automation
    **Version: 1.0**

    This blueprint allows you to set up a doorbell automation that can flash lights,

    play sounds, send notifications, and execute custom actions when a doorbell is pressed.

    You can customize the behavior based on whether anyone is home or not.


    [![ko-fi](https://ko-fi.com/img/githubbutton_sm.svg)](https://ko-fi.com/M4M4ZS0Y)
  domain: automation
  source_url: https://raw.githubusercontent.com/Fredrik81/HASS/refs/heads/main/doorbell.yaml
  input:
    button_device:
      name: Doorbell Button (MQTT)
      description: Select the Zigbee2MQTT button to trigger the doorbell.
      selector:
        device:
          filter:
            - integration: mqtt
    zone_entity:
      name: Presence Zone
      description: Zone entity to check for presence (e.g., zone.home).
      selector:
        entity:
          domain: zone
      default: zone.home
    media_zone_condition:
      name: When to play media
      description: Choose when to play media based on zone presence.
      default: always
      selector:
        select:
          options:
            - label: Always
              value: always
            - label: Only if someone is in the zone
              value: in
            - label: Only if no one is in the zone
              value: out
    media_url:
      name: Media File URL
      description: URL of the media file to play (e.g., MP3).
      default: https://raw.githubusercontent.com/Fredrik81/HASS/refs/heads/main/doorbell/doorbell.mp3
      selector:
        text:
          type: url
    media_players:
      name: Media Players
      description: Select media players to play the doorbell sound.
      selector:
        target:
          entity:
            domain: media_player
    send_notification:
      name: Notify Phone
      description: Optionally notify a mobile device.
      default: false
      selector:
        boolean: {}
    notify_zone_condition:
      name: When to send notification
      description: Choose when to send the notification based on zone presence.
      default: always
      selector:
        select:
          options:
            - label: Always
              value: always
            - label: Only if someone is in the zone
              value: in
            - label: Only if no one is in the zone
              value: out
    notify_target:
      name: Notification Target
      description: Mobile app notify target (e.g. notify.mobile_app_xyz)
      default: []
      selector:
        device:
          filter:
            - integration: mobile_app
          multiple: true

variables:
  zone: !input zone_entity
  zone_name: "{{ state_attr(zone, 'friendly_name') | lower }}"
  someone_in_zone: >
    {{ expand(states.person) | selectattr('state', 'defined') |
       map(attribute='state') | map('lower') |
       select('equalto', zone_name) | list | count > 0 }}
  media_condition: !input media_zone_condition
  notify_condition: !input notify_zone_condition
  send_notification: !input send_notification
  notify_target: !input notify_target
  media_url: !input media_url
  media_players: !input media_players

triggers:
  - platform: device
    device_id: !input button_device
    domain: mqtt
    type: action
    subtype: single

condition: []

action:
  - choose:
      - conditions:
          - condition: template
            value_template: "{{ media_zone_condition == 'always' or (media_zone_condition == 'in' and someone_in_zone) or (media_zone_condition == 'out' and not someone_in_zone) }}"
        sequence:
          - service: media_player.play_media
            data:
              media_content_id: media_url
              media_content_type: audio/mpeg
            target: !input media_players

  - choose:
      - conditions:
          - condition: template
            value_template: "{{ iif(is_boolean(input.send_notification), input.send_notification, false) }}"
          - condition: template
            value_template: "{{ notify_zone_condition == 'always' or (notify_zone_condition == 'in' and someone_in_zone) or (notify_zone_condition == 'out' and not someone_in_zone) }}"
        sequence:
          - service: notify.{{ iif(input.notify_target is string, input.notify_target.split('.')[-1], 'mobile_app') }}
            data:
              title: DÃ¶rrklocka alarm!
